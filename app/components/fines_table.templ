package components

import (
	"github.com/cmcd97/bytesize/app/types"
	"github.com/cmcd97/bytesize/lib"
	"strconv"
)

templ FinesTable(cards []types.TableCard, isSuspended bool) {
	<div class="mb-4">
		<p class="font-bold text-base-content">Cards</p>
		<div class="w-72 flex items-center justify-center mb-2 join"></div>
		if len(cards) == 0 {
			<div role="alert" class="alert bg-neutral">
				<svg
					xmlns="http://www.w3.org/2000/svg"
					class="h-6 w-6 shrink-0 stroke-current"
					fill="none"
					viewBox="0 0 24 24"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
					></path>
				</svg>
				<span>No outstanding cards</span>
			</div>
		} else if len(cards) >= 4 || isSuspended {
			<div role="alert" class="alert bg-error">
				<svg
					xmlns="http://www.w3.org/2000/svg"
					class="h-6 w-6 shrink-0 stroke-current"
					fill="none"
					viewBox="0 0 24 24"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						d="M12 9v3.75m9-.75a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 3.75h.008v.008H12v-.008Z"
					></path>
				</svg>
				<span>You have been suspended!</span>
			</div>
		} else {
			<div class="overflow-x-auto w-72 rounded-lg font-small-text">
				<table class="table table-xs">
					<!-- head -->
					<thead class="bg-primary text-primary-content font-bold">
						<tr>
							<th>Week</th>
							<th>Reason</th>
							<th></th>
							<th></th>
						</tr>
					</thead>
					<tbody class="bg-base-100">
						for _, card := range cards {
							if card.IsCompleted && card.AdminVerified {
								continue
							} else if card.IsCompleted && !card.AdminVerified {
								<tr class="bg-neutral">
									<th>{ strconv.Itoa(card.Gameweek) }</th>
									<td>
										{ lib.ReplaceUnderscoresWithSpaces(card.Type) }
									</td>
									<td></td>
									<td>
										<svg
											xmlns="http://www.w3.org/2000/svg"
											class="h-6 w-6"
											fill="none"
											viewBox="0 0 24 24"
											stroke="currentColor"
										>
											<path
												stroke-linecap="round"
												stroke-linejoin="round"
												stroke-width="2"
												d="M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
											></path>
										</svg>
									</td>
								</tr>
							} else {
								<tr>
									<th>{ strconv.Itoa(card.Gameweek) }</th>
									<td>
										{ lib.ReplaceUnderscoresWithSpaces(card.Type) }
									</td>
									if card.NominatorTeamID != 0 && card.Type != "reverse" && card.UserHasReverse {
										<td><button class="btn btn-xs btn-outline btn-primary" onclick="reverseModal.showModal()" value={ card.CardHash } hx-post="/app/reverse_preview" hx-target="#reverseModal" name="cardHash">reverse</button></td>
									} else {
										<td><button class="btn  btn-xs btn-disabled" tabindex="-1" role="button" aria-disabled="true">reverse</button></td>
									}
									<td><button class="btn btn-xs btn-outline btn-accent" onclick="submissionModal.showModal()" value={ card.CardHash } hx-post="/app/submit_preview" hx-target="#submissionModal" name="cardHash">submit</button></td>
								</tr>
							}
						}
					</tbody>
				</table>
			</div>
		}
	</div>
	<dialog id="submissionModal" class="modal"></dialog>
	<dialog id="reverseModal" class="modal"></dialog>
}
